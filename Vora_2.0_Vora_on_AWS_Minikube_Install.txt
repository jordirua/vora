@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@ Vora 2.0 on Kubernetes with Minikube in AWS @@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

# Instance : 
# - Ubuntu Server 16.04
# - t2.xlarge (r3.2xlarge)
# - Root storage size: 100 GiB
# - open ports 30000-33000 in your security group

###############################

sudo apt-get update

sudo apt install jq

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL 'https://sks-keyservers.net/pks/lookup?op=get&search=0xee6d536cf7dc86e2d7d56f59a178ac6c6238f52e' | sudo apt-key add -

sudo add-apt-repository \
   "deb https://packages.docker.com/1.12/apt/repo/ \
   ubuntu-$(lsb_release -cs) \
   main"

sudo apt-get update

sudo apt-get install docker-engine=1.12.6~cs13-0~ubuntu-xenial

# Allow non-sudo access to docker
sudo groupadd docker
sudo gpasswd -a $USER docker
newgrp docker

# Test docker
docker run hello-world

# Install socat (required for helm)
sudo apt-get install socat

# install for security to work
sudo apt-get install python

sudo apt-get install python-pip

pip install pyyaml

# Install kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x kubectl
sudo mv kubectl /usr/bin/kubectl

# Check kubectl installed
kubectl cluster-info

# Install minikube
curl -Lo minikube https://storage.googleapis.com/minikube/releases/v0.22.1/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/

# Check minikube installed
minikube version

# Start minikube VM
sudo minikube start --cpus 4 --memory 48000 --disk-size=50g --kubernetes-version=v1.6.4 --vm-driver=none

# Adjust permissions for kube/minikube configs
sudo chown -R $USER $HOME/.kube
sudo chgrp -R $USER $HOME/.kube
sudo chown -R $USER $HOME/.minikube
sudo chgrp -R $USER $HOME/.minikube

minikube status

# Now, check kubernetes dashboard
http://?????:30000

#####################
# Vora Prerequisites
#####################

# Install helm
curl -LO https://storage.googleapis.com/kubernetes-helm/helm-v2.6.1-linux-amd64.tar.gz > helm-v2.6.1-linux-amd64.tar.gz
gunzip helm-v2.6.1-linux-amd64.tar.gz
tar xvf helm-v2.6.1-linux-amd64.tar
sudo mv linux-amd64/helm /usr/bin/helm
rm helm-v2.6.1-linux-amd64.tar

# Start a local docker registry as a docker container
docker run -d -p 5000:5000 --restart=always --name registry -v /var/local/registry:/var/lib/registry registry:2

# Get vora package : SMP version
wget https://www.dropbox.com/s/?????????????/VORA200_1-70003003.TGZ?dl=0 -O VORA200_1-70003003.TGZ
# "????"s in the string above, as you'll need to get the Vora Installation File from SAP Service Marketplace

# Untar package
tar xzvf VORA200_1-70003003.TGZ

# export NAMESPACE and DOCKER_REGISTRY
export NAMESPACE=vora
export DOCKER_REGISTRY=localhost:5000

cd SAPVora-DistributedRuntime/
# ./install.sh --purge

# This will take some time ...
./install.sh -dt=cloud -ss=vora-diagnostic --enable-rbac=no

./install.sh --validate

# Observe "Ports for external connectivity" at the end of installation
# Open vora-tools UI with
# eg: http://vora2:?????

./install.sh --show-summary

### To re-initialize. Port stays the same
cd SAPVora-DistributedRuntime
wget https://www.dropbox.com/s/4vavq9qil2ickxa/recover.sh?dl=0 -O recover.sh
chmod 777 recover.sh
./recover.sh
# wait 3-5 mins
sleep 3m
export NAMESPACE=vora
export DOCKER_REGISTRY=localhost:5000
./install.sh -t

### Test with bob's test public s3 file 
drop table if exists dims;
create table dims (teamid int, team string)
using com.sap.spark.engines.relational
options 
(
files "/shabob/footy_dims.csv",
storagebackend "s3",
s3accesskeyid "[ping hanaacademy@sap.com for access key id]",
s3secretaccesskey "[ping hanaacademy@sap.com for secret access key]",
s3endpoint "https://s3.us-east-2.amazonaws.com"
);
